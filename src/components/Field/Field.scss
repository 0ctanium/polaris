@import 'foundation/borders';
@import 'foundation/border-radius';
@import 'foundation/typography';

.hasValue .InputWrapper {
  color: color(ink);
}

.focused .InputWrapper {
  border-color: color(action);
}

.disabled .InputWrapper {
  border: border();
  background-color: color(sky, lighter);
}

.readonly .InputWrapper {
  background-color: color(sky, lighter);
}

.hasError {
  color: color(red);

  .InputWrapper {
    border-color: color(red);
    background-color: color(red, lightest);
  }
}

.LabelWrapper {
  margin-bottom: 0.3rem;
}

.ConnectedWrapper {
  position: relative;
  display: flex;
}

.ConnectedItem {
  flex: 0 0 auto;
  display: flex;
  z-index: 10;
}

.ConnectedItem > * {
  flex: 1 1 auto;
}

.stretch {
  flex: 1 1 auto;
}

.focusedItem {
  z-index: 20;
}

.ConnectedItem:not(:last-child) * {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.ConnectedItem:not(:first-child) {
  margin-left: -1px;
}

.ConnectedItem:not(:first-child) * {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.InputWrapper {
  @include text-style-input;
  color: color(ink, lighter);
  line-height: 1.4;
  border: border(dark);
  display: flex;
  align-items: baseline;
  padding: 0.32rem 0.625rem;
  border-radius: border-radius();
}

.LeftAddon {
  flex: 0 0 auto;
  margin-right: 0.25em;
  color: currentColor;
}

.RightAddon {
  flex: 0 0 auto;
  margin-left: 0.25em;
  color: currentColor;
}

.Input {
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  line-height: inherit;
  display: block;
  flex: 1 1 0%;
  border: none;
  appearance: none;
  padding: 0;
  margin: 0;
  width: 100%;
  background: none;
}

.Input:focus {
  outline: none;
}

.Input::placeholder {
  color: color(ink, lighter);
}

.HelpText {
  @include text-style-body;
  @include text-emphasis-subdued;
  margin: 0.3rem 0 0;
}
