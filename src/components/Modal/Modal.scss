@import 'foundation/colors';
@import 'foundation/shadows';
@import 'foundation/spacing';
@import 'foundation/borders';
@import 'foundation/border-radius';
@import 'foundation/breakpoints';
@import 'foundation/shadows';
@import 'foundation/utilities';
@import 'foundation/easing';
@import 'foundation/duration';
@import 'foundation/z-index';

$top-offset-desktop: rem(100px);
$top-offset-slide-in-start: rem(200px);
$entry-iterations: 1;
$body-height-offset: rem(150px);
$width-px: 620px;
$width: rem($width-px);
$backdrop-color: rgba(33, 43, 54, 0.4);

.Container {
  position: absolute;
  z-index: z-index(overlay);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;

  @include main-content-when-not-condensed {
    justify-content: center;
  }
}

.CloseButton {
  appearance: none;
  margin: -#{spacing()};
  padding: spacing();
  background: transparent;
  border: none;
}

.Modal {
  transform: translateY(0);
  width: $width;
  background: color(white);
  box-shadow: shadow(layer);
  border-radius: border-radius(large);
  max-width: 100vw;
  max-height: calc(100% - #{spacing(loose)});
  opacity: 1;
  will-change: transform, opacity;
  transition:
    transform easing() duration(),
    opacity easing() duration();

  &:focus {
    outline: 0;
  }

  &.hidden {
    opacity: 0;
    transform: translateY($top-offset-slide-in-start);
  }


  @include breakpoint-after($width-px) {
    max-width: $width;
    margin: 0 auto;
    border-radius: border-radius(large);
    max-height: calc(100% - #{spacing()});
  }
}

.Header {
  display: flex;
  flex: 0 0 auto;
  padding: spacing() spacing(loose);
  border-bottom: border();
}

.HeaderContent {
  flex: 1 1 auto;
}

.HeaderActions {
  display: flex;
  flex: 0 0 auto;
  align-items: flex-start;
  margin: (-1 * spacing()) (-1 * spacing()) 0 0;
  padding-left: spacing(tight);
}

.Body {
  flex: 1 0 auto;
  max-height: calc(100vh - #{$body-height-offset});
}

.Footer {
  min-height: spacing() * 4;
  display: flex;
  flex: 0 0 auto;
  align-self: flex-end;
  padding: spacing();
  border-top: border();
}

.FooterContent {
  width: 100%;
}

.Section {
  flex: 0 0 auto;
  padding: spacing() spacing(loose);

  &:first-of-type {
    padding-top: spacing(loose);
  }

  &:not(:last-of-type) {
    border-bottom: border();
  }

  &.subdued {
    background: color(sky, light);
  }

  &.flush {
    padding: 0;
  }
}

.Backdrop {
  position: absolute;
  z-index: z-index(overlay) - 1;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: block;
  background: $backdrop-color;
  animation: fade-in duration() $entry-iterations forwards;
  opacity: 1;
  will-change: opacity;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}
